// Code generated by me. DO NOT EDIT.

package goIdlCorba

import  "github.com/bhbosman/orb/src/omg"
import __fmt__ "fmt"
import __json__ "encoding/json"
import __omg__ "github.com/bhbosman/orb/src/omg"
import __reflect__ "reflect"
import __yaccidl__ "github.com/bhbosman/yaccidl"

// TypeDef declaration: "CORBA::PolicyType", generatedBy by: "WriteTypeDefOfPrimitiveDcl"
//Typedef Primitive declaration: "CORBA::PolicyType" from: "uint32"
type CorbaPolicyType uint32

//noinspection GoSnakeCaseUsage
type CorbaPolicyType_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CorbaPolicyTypeId_Const = "IDL:omg.org/CORBA/PolicyType:1.0"

func (self CorbaPolicyType_Helper) Id() string {
	return CorbaPolicyTypeId_Const
}

func (self CorbaPolicyType_Helper) Read(stream IReadAny) (uint32, error) {
	result, err := IdlUnsignedLongHelper.Read(stream)
	return result, err
}

func (self CorbaPolicyType_Helper) Write(stream IWriteAny, v uint32) error {
	return IdlUnsignedLongHelper.Write(stream, v)
}

// Interface declaration: "CORBA::Policy", generatedBy by: "WriteInterface"
type CorbaPolicy interface {
	// Interface operations
	// Original name: "copy"
	Copy() (result CorbaPolicy, err error)
	// Original name: "destroy"
	Destroy() (error error)
	// Property PolicyType
	// Get Property PolicyType
	GetPolicyType() (uint32, error)
}

//noinspection GoSnakeCaseUsage
type CorbaPolicy_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CorbaPolicyId_Const = "IDL:omg.org/CORBA/Policy:1.0"

func (self CorbaPolicy_Helper) Id() string {
	return CorbaPolicyId_Const
}

func (self CorbaPolicy_Helper) Read(stream IReadAny) (CorbaPolicy, error) {
	return nil, nil
}

func (self CorbaPolicy_Helper) Write(stream IWriteAny, v CorbaPolicy) error {
	return nil
}

// TypeDef declaration: "CORBA::PolicyList", generatedBy by: "WriteTypeDefOfSequenceDcl"
//Typedef Sequence declaration: CORBA::PolicyList
type CorbaPolicyList []CorbaPolicy

//noinspection GoSnakeCaseUsage
type CorbaPolicyList_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CorbaPolicyListId_Const = "IDL:omg.org/CORBA/PolicyList:1.0"

func (self CorbaPolicyList_Helper) Id() string {
	return CorbaPolicyListId_Const
}

// WriteTypeDefOfSequenceDcl::WriteExtract
func (self CorbaPolicyList_Helper) Read(stream IReadAny) (CorbaPolicyList, error) {
	n, err := IdlUnsignedLongHelper.Read(stream)
	if err != nil {
		return nil, err
	}
	if n > 0 {
		result := make(CorbaPolicyList, n)
		var i uint32
		for i = 0; i < n; i++ {
			result[i], err = CorbaPolicyHelper.Read(stream)
			if err != nil {
				return nil, err
			}
		}
		return result, nil
	}
	return nil, nil
}

func (self CorbaPolicyList_Helper) Write(stream IWriteAny, v CorbaPolicyList) error {
	if v == nil {
		return IdlUnsignedLongHelper.Write(stream, 0)
	}
	err := IdlUnsignedLongHelper.Write(stream, uint32(len(v)))
	if err != nil {
		return nil
	}
	for _, item := range v {
			err = CorbaPolicyHelper.Write(stream, item)
		if err != nil {
			return err
		}
	}
	return err
}

// TypeDef declaration: "CORBA::PolicyTypeSeq", generatedBy by: "WriteTypeDefOfSequenceDcl"
//Typedef Sequence declaration: CORBA::PolicyTypeSeq
type CorbaPolicyTypeSeq []uint32

//noinspection GoSnakeCaseUsage
type CorbaPolicyTypeSeq_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CorbaPolicyTypeSeqId_Const = "IDL:omg.org/CORBA/PolicyTypeSeq:1.0"

func (self CorbaPolicyTypeSeq_Helper) Id() string {
	return CorbaPolicyTypeSeqId_Const
}

// WriteTypeDefOfSequenceDcl::WriteExtract
func (self CorbaPolicyTypeSeq_Helper) Read(stream IReadAny) (CorbaPolicyTypeSeq, error) {
	n, err := IdlUnsignedLongHelper.Read(stream)
	if err != nil {
		return nil, err
	}
	if n > 0 {
		result := make(CorbaPolicyTypeSeq, n)
		var i uint32
		for i = 0; i < n; i++ {
			result[i], err = CorbaPolicyTypeHelper.Read(stream)
			if err != nil {
				return nil, err
			}
		}
		return result, nil
	}
	return nil, nil
}

func (self CorbaPolicyTypeSeq_Helper) Write(stream IWriteAny, v CorbaPolicyTypeSeq) error {
	if v == nil {
		return IdlUnsignedLongHelper.Write(stream, 0)
	}
	err := IdlUnsignedLongHelper.Write(stream, uint32(len(v)))
	if err != nil {
		return nil
	}
	for _, item := range v {
			err = CorbaPolicyTypeHelper.Write(stream, item)
		if err != nil {
			return err
		}
	}
	return err
}

// TypeDef declaration: "CORBA::PolicyErrorCode", generatedBy by: "WriteTypeDefOfPrimitiveDcl"
//Typedef Primitive declaration: "CORBA::PolicyErrorCode" from: "int16"
type CorbaPolicyErrorCode int16

//noinspection GoSnakeCaseUsage
type CorbaPolicyErrorCode_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CorbaPolicyErrorCodeId_Const = "IDL:omg.org/CORBA/PolicyErrorCode:1.0"

func (self CorbaPolicyErrorCode_Helper) Id() string {
	return CorbaPolicyErrorCodeId_Const
}

func (self CorbaPolicyErrorCode_Helper) Read(stream IReadAny) (int16, error) {
	result, err := IdlShortHelper.Read(stream)
	return result, err
}

func (self CorbaPolicyErrorCode_Helper) Write(stream IWriteAny, v int16) error {
	return IdlShortHelper.Write(stream, v)
}

// Exception declaration: "CORBA::PolicyError", generatedBy by: "WriteStructDcl"
// Exception Decl: true
type CorbaPolicyError struct {
	IdlObject
	Reason int16                `json:"Reason"`
}

//noinspection GoSnakeCaseUsage
const CorbaPolicyErrorId_Const = "IDL:omg.org/CORBA/PolicyError:1.0"

//noinspection GoUnusedExportedFunction
func NewDefaultCorbaPolicyError() *CorbaPolicyError {
	//noinspection GoRedundantConversion
	return &CorbaPolicyError{
		IdlObject: IdlObject{
			Id: CorbaPolicyErrorId_Const,
		},
		// "StructDclDefaultConstructorMemberDefaultValueService"
		Reason: 0,
	}
}

//noinspection GoUnusedExportedFunction
func NewCorbaPolicyError(
	//"StructDclAllParamsConstructorParamService"
	Reason int16) *CorbaPolicyError {
	//noinspection GoRedundantConversion
	return &CorbaPolicyError{
		IdlObject: IdlObject{
			Id: CorbaPolicyErrorId_Const,
		},
		Reason: Reason,
	}
}

//noinspection GoUnusedExportedFunction
func NewRandomCorbaPolicyError(randomGenerator IRandomDataGenerator) *CorbaPolicyError {
	//noinspection GoRedundantConversion
	return &CorbaPolicyError{
		IdlObject: IdlObject{
			Id: CorbaPolicyErrorId_Const,
		},
		// "StructDclDefaultConstructorMemberDefaultValueService"
		Reason: randomGenerator.ShortTypeValue(__reflect__.TypeOf((*__goIdlCorba__.CorbaPolicyError)(nil)), "Reason"),
	}
}

func (self *CorbaPolicyError) String() string {
	b, err := __json__.Marshal(self)
	if err != nil {
		return ""
	}
	return string(b)
}

func (self *CorbaPolicyError) Error() string{
	return 	__fmt__.Sprintf("Error of type CorbaPolicyError(%v)", self.String())
}
func (self *CorbaPolicyError) GoString() string {
	return self.String()
}

func (self *CorbaPolicyError) ReadValue(stream IReadAny) error {
	var err error
	err = self.IdlObject.ReadValue(stream)
	if err != nil {
		return err
	}
	self.Reason, err = CorbaPolicyErrorCodeHelper.Read(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CorbaPolicyError) Read(stream IReadAny) error {
	err := self.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CorbaPolicyError) Write(stream IWriteAny) error {
	var err error
	err = self.IdlObject.Write(stream)
	if err != nil {
		return err
	}
	err = CorbaPolicyErrorCodeHelper.Write(stream, self.Reason)
	if err != nil {
		return err
	}
	return nil
}

//noinspection GoSnakeCaseUsage
type CorbaPolicyError_Helper struct {
}

//noinspection GoSnakeCaseUsage
func (self *CorbaPolicyError_Helper) CreateTypeCode(orb CorbaOrb) (CorbaTypeCode, error) {
	var err error
	var memberSeq CorbaStructMemberSeq = nil
	err = self.AddMembers(orb, &memberSeq)
	if err != nil {
		return nil, err
	}
	return nil, nil
}

//noinspection GoSnakeCaseUsage
func (self *CorbaPolicyError_Helper) AddMembers(orb CorbaOrb, memberSeq *CorbaStructMemberSeq) error {
	err := IdlObjectHelper.AddMembers(orb, memberSeq)
	if err != nil {
		return err
	}
	var memberInstance *CorbaStructMember
	memberInstance = NewDefaultCorbaStructMember()
	*memberSeq = append(*memberSeq, memberInstance)
	return nil
}

// Constant declaration: "CORBA::BAD_POLICY", generatedBy by: "WriteConstantValue"
//noinspection GoUnusedConst
const CorbaBadPolicy int16 = 0

// Constant declaration: "CORBA::UNSUPPORTED_POLICY", generatedBy by: "WriteConstantValue"
//noinspection GoUnusedConst
const CorbaUnsupportedPolicy int16 = 1

// Constant declaration: "CORBA::BAD_POLICY_TYPE", generatedBy by: "WriteConstantValue"
//noinspection GoUnusedConst
const CorbaBadPolicyType int16 = 2

// Constant declaration: "CORBA::BAD_POLICY_VALUE", generatedBy by: "WriteConstantValue"
//noinspection GoUnusedConst
const CorbaBadPolicyValue int16 = 3

// Constant declaration: "CORBA::UNSUPPORTED_POLICY_VALUE", generatedBy by: "WriteConstantValue"
//noinspection GoUnusedConst
const CorbaUnsupportedPolicyValue int16 = 4

// Enum declaration: "CORBA::SetOverrideType", generatedBy by: "WriteEnumDcl"
type CorbaSetOverrideType uint32

//noinspection GoUnusedConst
const (
	CorbaSetOverrideTypeSetOverride CorbaSetOverrideType = 0
	CorbaSetOverrideTypeAddOverride CorbaSetOverrideType = 1
)

//noinspection GoSnakeCaseUsage
type CorbaSetOverrideType_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CorbaSetOverrideTypeId_Const = "IDL:omg.org/CORBA/SetOverrideType:1.0"

func (self CorbaSetOverrideType_Helper) Id() string {
	return CorbaSetOverrideTypeId_Const
}

func (self CorbaSetOverrideType_Helper) Read(stream IReadAny) (uint32, error) {
	result, err := IdlUInt32Helper.Read(stream)
	return result, err
}

func (self CorbaSetOverrideType_Helper) Write(stream IWriteAny, v uint32) error {
	return IdlUInt32Helper.Write(stream, v)
}

// TypeDef declaration: "CORBA::IndexList", generatedBy by: "WriteTypeDefOfSequenceDcl"
//Typedef Sequence declaration: CORBA::IndexList
type CorbaIndexList []uint16

//noinspection GoSnakeCaseUsage
type CorbaIndexList_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CorbaIndexListId_Const = "IDL:omg.org/CORBA/IndexList:1.0"

func (self CorbaIndexList_Helper) Id() string {
	return CorbaIndexListId_Const
}

// WriteTypeDefOfSequenceDcl::WriteExtract
func (self CorbaIndexList_Helper) Read(stream IReadAny) (CorbaIndexList, error) {
	n, err := IdlUnsignedLongHelper.Read(stream)
	if err != nil {
		return nil, err
	}
	if n > 0 {
		result := make(CorbaIndexList, n)
		var i uint32
		for i = 0; i < n; i++ {
			result[i], err = IdlUnsignedShortHelper.Read(stream)
			if err != nil {
				return nil, err
			}
		}
		return result, nil
	}
	return nil, nil
}

func (self CorbaIndexList_Helper) Write(stream IWriteAny, v CorbaIndexList) error {
	if v == nil {
		return IdlUnsignedLongHelper.Write(stream, 0)
	}
	err := IdlUnsignedLongHelper.Write(stream, uint32(len(v)))
	if err != nil {
		return nil
	}
	for _, item := range v {
			err = IdlUnsignedShortHelper.Write(stream, item)
		if err != nil {
			return err
		}
	}
	return err
}

// Exception declaration: "CORBA::InvalidPolicies", generatedBy by: "WriteStructDcl"
// Exception Decl: true
type CorbaInvalidPolicies struct {
	IdlObject
	Indicies CorbaIndexList `json:"Indicies"`
}

//noinspection GoSnakeCaseUsage
const CorbaInvalidPoliciesId_Const = "IDL:omg.org/CORBA/InvalidPolicies:1.0"

//noinspection GoUnusedExportedFunction
func NewDefaultCorbaInvalidPolicies() *CorbaInvalidPolicies {
	//noinspection GoRedundantConversion
	return &CorbaInvalidPolicies{
		IdlObject: IdlObject{
			Id: CorbaInvalidPoliciesId_Const,
		},
		// "StructDclDefaultConstructorMemberDefaultValueService"
		Indicies: CorbaIndexList(nil),
	}
}

//noinspection GoUnusedExportedFunction
func NewCorbaInvalidPolicies(
	//"StructDclAllParamsConstructorParamService"
	Indicies CorbaIndexList) *CorbaInvalidPolicies {
	//noinspection GoRedundantConversion
	return &CorbaInvalidPolicies{
		IdlObject: IdlObject{
			Id: CorbaInvalidPoliciesId_Const,
		},
		Indicies: Indicies,
	}
}

//noinspection GoUnusedExportedFunction
func NewRandomCorbaInvalidPolicies(randomGenerator IRandomDataGenerator) *CorbaInvalidPolicies {
	//noinspection GoRedundantConversion
	return &CorbaInvalidPolicies{
		IdlObject: IdlObject{
			Id: CorbaInvalidPoliciesId_Const,
		},
		// "StructDclDefaultConstructorMemberDefaultValueService"
		Indicies: CorbaIndexList(nil),
	}
}

func (self *CorbaInvalidPolicies) String() string {
	b, err := __json__.Marshal(self)
	if err != nil {
		return ""
	}
	return string(b)
}

func (self *CorbaInvalidPolicies) Error() string{
	return 	__fmt__.Sprintf("Error of type CorbaInvalidPolicies(%v)", self.String())
}
func (self *CorbaInvalidPolicies) GoString() string {
	return self.String()
}

func (self *CorbaInvalidPolicies) ReadValue(stream IReadAny) error {
	var err error
	err = self.IdlObject.ReadValue(stream)
	if err != nil {
		return err
	}
	self.Indicies, err = CorbaIndexListHelper.Read(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CorbaInvalidPolicies) Read(stream IReadAny) error {
	err := self.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CorbaInvalidPolicies) Write(stream IWriteAny) error {
	var err error
	err = self.IdlObject.Write(stream)
	if err != nil {
		return err
	}
	err = CorbaIndexListHelper.Write(stream, self.Indicies)
	if err != nil {
		return err
	}
	return nil
}

//noinspection GoSnakeCaseUsage
type CorbaInvalidPolicies_Helper struct {
}

//noinspection GoSnakeCaseUsage
func (self *CorbaInvalidPolicies_Helper) CreateTypeCode(orb CorbaOrb) (CorbaTypeCode, error) {
	var err error
	var memberSeq CorbaStructMemberSeq = nil
	err = self.AddMembers(orb, &memberSeq)
	if err != nil {
		return nil, err
	}
	return nil, nil
}

//noinspection GoSnakeCaseUsage
func (self *CorbaInvalidPolicies_Helper) AddMembers(orb CorbaOrb, memberSeq *CorbaStructMemberSeq) error {
	err := IdlObjectHelper.AddMembers(orb, memberSeq)
	if err != nil {
		return err
	}
	var memberInstance *CorbaStructMember
	memberInstance = NewDefaultCorbaStructMember()
	*memberSeq = append(*memberSeq, memberInstance)
	return nil
}

// Interface declaration: "CORBA::PolicyManager", generatedBy by: "WriteInterface"
type CorbaPolicyManager interface {
	// Interface operations
	// Original name: "get_policy_overrides"
	GetPolicyOverrides(Ts CorbaPolicyTypeSeq) (result CorbaPolicyList, err error)
	//Exceptions for : SetPolicyOverrides
	//	CorbaInvalidPolicies
	// Original name: "set_policy_overrides"
	SetPolicyOverrides(Policies CorbaPolicyList, SetAdd uint32) (error error)
}

//noinspection GoSnakeCaseUsage
type CorbaPolicyManager_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CorbaPolicyManagerId_Const = "IDL:omg.org/CORBA/PolicyManager:1.0"

func (self CorbaPolicyManager_Helper) Id() string {
	return CorbaPolicyManagerId_Const
}

func (self CorbaPolicyManager_Helper) Read(stream IReadAny) (CorbaPolicyManager, error) {
	return nil, nil
}

func (self CorbaPolicyManager_Helper) Write(stream IWriteAny, v CorbaPolicyManager) error {
	return nil
}

// Interface declaration: "CORBA::PolicyCurrent", generatedBy by: "WriteInterface"
type CorbaPolicyCurrent interface {
	//No duplicate operations found in the base interfaces.
	CorbaPolicyManager
	CorbaCurrent
	// Interface operations
}

//noinspection GoSnakeCaseUsage
type CorbaPolicyCurrent_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CorbaPolicyCurrentId_Const = "IDL:omg.org/CORBA/PolicyCurrent:1.0"

func (self CorbaPolicyCurrent_Helper) Id() string {
	return CorbaPolicyCurrentId_Const
}

func (self CorbaPolicyCurrent_Helper) Read(stream IReadAny) (CorbaPolicyCurrent, error) {
	return nil, nil
}

func (self CorbaPolicyCurrent_Helper) Write(stream IWriteAny, v CorbaPolicyCurrent) error {
	return nil
}


//noinspection GoUnusedGlobalVariable
var CorbaPolicyTypeHelper = CorbaPolicyType_Helper{}

//noinspection GoUnusedGlobalVariable
var CorbaPolicyHelper = CorbaPolicy_Helper{}

//noinspection GoUnusedGlobalVariable
var CorbaPolicyListHelper = CorbaPolicyList_Helper{}

//noinspection GoUnusedGlobalVariable
var CorbaPolicyTypeSeqHelper = CorbaPolicyTypeSeq_Helper{}

//noinspection GoUnusedGlobalVariable
var CorbaPolicyErrorCodeHelper = CorbaPolicyErrorCode_Helper{}

//noinspection GoUnusedGlobalVariable
var CorbaPolicyErrorHelper = CorbaPolicyError_Helper{}

//noinspection GoUnusedGlobalVariable
var CorbaSetOverrideTypeHelper = CorbaSetOverrideType_Helper{}

//noinspection GoUnusedGlobalVariable
var CorbaIndexListHelper = CorbaIndexList_Helper{}

//noinspection GoUnusedGlobalVariable
var CorbaInvalidPoliciesHelper = CorbaInvalidPolicies_Helper{}

//noinspection GoUnusedGlobalVariable
var CorbaPolicyManagerHelper = CorbaPolicyManager_Helper{}

//noinspection GoUnusedGlobalVariable
var CorbaPolicyCurrentHelper = CorbaPolicyCurrent_Helper{}

func init() {
	AddRegistration(
		NewRegistrationInformation(
			CorbaPolicyErrorId_Const,
			__yaccidl__.IdlStruct,
			"CORBA_Policy.idl.go",
			func() IIdlObject {
				return NewDefaultCorbaPolicyError()
			},
			func(generator IRandomDataGenerator) IIdlObject {
				return NewRandomCorbaPolicyError(generator)
			},
			 __reflect__.TypeOf((*CorbaPolicyError)(nil))))
	AddRegistration(
		NewRegistrationInformation(
			CorbaInvalidPoliciesId_Const,
			__yaccidl__.IdlStruct,
			"CORBA_Policy.idl.go",
			func() IIdlObject {
				return NewDefaultCorbaInvalidPolicies()
			},
			func(generator IRandomDataGenerator) IIdlObject {
				return NewRandomCorbaInvalidPolicies(generator)
			},
			 __reflect__.TypeOf((*CorbaInvalidPolicies)(nil))))
}
