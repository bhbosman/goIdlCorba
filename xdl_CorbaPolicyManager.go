// Code generated by me. DO NOT EDIT.

package goIdlCorba

import __goidl__ "github.com/bhbosman/goidl"

// Interface declaration: "CORBA::PolicyManager", generatedBy by: "WriteInterface"
type CorbaPolicyManager interface {
	// Original name: "get_policy_overrides"
	GetPolicyOverrides(params CorbaPolicyManagerGetPolicyOverridesIn) (CorbaPolicyManagerGetPolicyOverridesOut, error)
	//Exceptions for : SetPolicyOverrides
	//	CorbaInvalidPolicies
	// Original name: "set_policy_overrides"
	SetPolicyOverrides(params CorbaPolicyManagerSetPolicyOverridesIn) (CorbaPolicyManagerSetPolicyOverridesOut, error)
}

const CorbaPolicyManagerGetPolicyOverridesOperation = "get_policy_overrides"
const CorbaPolicyManagerSetPolicyOverridesOperation = "set_policy_overrides"
//noinspection GoSnakeCaseUsage
type CorbaPolicyManager_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CorbaPolicyManagerId_Const = "IDL:omg.org/CORBA/PolicyManager:1.0"

func (self CorbaPolicyManager_Helper) Id() string {
	return CorbaPolicyManagerId_Const
}

func (self CorbaPolicyManager_Helper) Read(stream __goidl__.IReadAny) (CorbaPolicyManager, error) {
	return nil, nil
}

func (self CorbaPolicyManager_Helper) Write(stream __goidl__.IWriteAny, v CorbaPolicyManager) error {
	return nil
}


//noinspection GoUnusedGlobalVariable
var CorbaPolicyManagerHelper = CorbaPolicyManager_Helper{}

func init() {
}
