// Code generated by me. DO NOT EDIT.

package goIdlCorba

import __goidl__ "github.com/bhbosman/goidl"

// Interface declaration: "CORBA::Repository", generatedBy by: "WriteInterface"
type CorbaRepository interface {
	// Original name: "contents"
	Contents(params CorbaRepositoryContentsIn) (CorbaRepositoryContentsOut, error)
	// Original name: "create_abstract_interface"
	CreateAbstractInterface(params CorbaRepositoryCreateAbstractInterfaceIn) (CorbaRepositoryCreateAbstractInterfaceOut, error)
	// Original name: "create_alias"
	CreateAlias(params CorbaRepositoryCreateAliasIn) (CorbaRepositoryCreateAliasOut, error)
	// Original name: "create_array"
	CreateArray(params CorbaRepositoryCreateArrayIn) (CorbaRepositoryCreateArrayOut, error)
	// Original name: "create_constant"
	CreateConstant(params CorbaRepositoryCreateConstantIn) (CorbaRepositoryCreateConstantOut, error)
	// Original name: "create_enum"
	CreateEnum(params CorbaRepositoryCreateEnumIn) (CorbaRepositoryCreateEnumOut, error)
	// Original name: "create_exception"
	CreateException(params CorbaRepositoryCreateExceptionIn) (CorbaRepositoryCreateExceptionOut, error)
	// Original name: "create_ext_value"
	CreateExtValue(params CorbaRepositoryCreateExtValueIn) (CorbaRepositoryCreateExtValueOut, error)
	// Original name: "create_fixed"
	CreateFixed(params CorbaRepositoryCreateFixedIn) (CorbaRepositoryCreateFixedOut, error)
	// Original name: "create_interface"
	CreateInterface(params CorbaRepositoryCreateInterfaceIn) (CorbaRepositoryCreateInterfaceOut, error)
	// Original name: "create_local_interface"
	CreateLocalInterface(params CorbaRepositoryCreateLocalInterfaceIn) (CorbaRepositoryCreateLocalInterfaceOut, error)
	// Original name: "create_module"
	CreateModule(params CorbaRepositoryCreateModuleIn) (CorbaRepositoryCreateModuleOut, error)
	// Original name: "create_native"
	CreateNative(params CorbaRepositoryCreateNativeIn) (CorbaRepositoryCreateNativeOut, error)
	// Original name: "create_sequence"
	CreateSequence(params CorbaRepositoryCreateSequenceIn) (CorbaRepositoryCreateSequenceOut, error)
	// Original name: "create_string"
	CreateString(params CorbaRepositoryCreateStringIn) (CorbaRepositoryCreateStringOut, error)
	// Original name: "create_struct"
	CreateStruct(params CorbaRepositoryCreateStructIn) (CorbaRepositoryCreateStructOut, error)
	// Original name: "create_union"
	CreateUnion(params CorbaRepositoryCreateUnionIn) (CorbaRepositoryCreateUnionOut, error)
	// Original name: "create_value"
	CreateValue(params CorbaRepositoryCreateValueIn) (CorbaRepositoryCreateValueOut, error)
	// Original name: "create_value_box"
	CreateValueBox(params CorbaRepositoryCreateValueBoxIn) (CorbaRepositoryCreateValueBoxOut, error)
	// Original name: "create_wstring"
	CreateWstring(params CorbaRepositoryCreateWstringIn) (CorbaRepositoryCreateWstringOut, error)
	// Original name: "describe_contents"
	DescribeContents(params CorbaRepositoryDescribeContentsIn) (CorbaRepositoryDescribeContentsOut, error)
	// Original name: "destroy"
	Destroy(params CorbaRepositoryDestroyIn) (CorbaRepositoryDestroyOut, error)
	// Original name: "get_canonical_typecode"
	GetCanonicalTypecode(params CorbaRepositoryGetCanonicalTypecodeIn) (CorbaRepositoryGetCanonicalTypecodeOut, error)
	// Original name: "get_primitive"
	GetPrimitive(params CorbaRepositoryGetPrimitiveIn) (CorbaRepositoryGetPrimitiveOut, error)
	// Original name: "lookup"
	Lookup(params CorbaRepositoryLookupIn) (CorbaRepositoryLookupOut, error)
	// Original name: "lookup_id"
	LookupId(params CorbaRepositoryLookupIdIn) (CorbaRepositoryLookupIdOut, error)
	// Original name: "lookup_name"
	LookupName(params CorbaRepositoryLookupNameIn) (CorbaRepositoryLookupNameOut, error)
}

const CorbaRepositoryContentsOperation = "contents"
const CorbaRepositoryCreateAbstractInterfaceOperation = "create_abstract_interface"
const CorbaRepositoryCreateAliasOperation = "create_alias"
const CorbaRepositoryCreateArrayOperation = "create_array"
const CorbaRepositoryCreateConstantOperation = "create_constant"
const CorbaRepositoryCreateEnumOperation = "create_enum"
const CorbaRepositoryCreateExceptionOperation = "create_exception"
const CorbaRepositoryCreateExtValueOperation = "create_ext_value"
const CorbaRepositoryCreateFixedOperation = "create_fixed"
const CorbaRepositoryCreateInterfaceOperation = "create_interface"
const CorbaRepositoryCreateLocalInterfaceOperation = "create_local_interface"
const CorbaRepositoryCreateModuleOperation = "create_module"
const CorbaRepositoryCreateNativeOperation = "create_native"
const CorbaRepositoryCreateSequenceOperation = "create_sequence"
const CorbaRepositoryCreateStringOperation = "create_string"
const CorbaRepositoryCreateStructOperation = "create_struct"
const CorbaRepositoryCreateUnionOperation = "create_union"
const CorbaRepositoryCreateValueOperation = "create_value"
const CorbaRepositoryCreateValueBoxOperation = "create_value_box"
const CorbaRepositoryCreateWstringOperation = "create_wstring"
const CorbaRepositoryDescribeContentsOperation = "describe_contents"
const CorbaRepositoryDestroyOperation = "destroy"
const CorbaRepositoryGetCanonicalTypecodeOperation = "get_canonical_typecode"
const CorbaRepositoryGetPrimitiveOperation = "get_primitive"
const CorbaRepositoryLookupOperation = "lookup"
const CorbaRepositoryLookupIdOperation = "lookup_id"
const CorbaRepositoryLookupNameOperation = "lookup_name"
//noinspection GoSnakeCaseUsage
type CorbaRepository_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CorbaRepositoryId_Const = "IDL:omg.org/CORBA/Repository:1.0"

func (self CorbaRepository_Helper) Id() string {
	return CorbaRepositoryId_Const
}

func (self CorbaRepository_Helper) Read(stream __goidl__.IReadAny) (CorbaRepository, error) {
	return nil, nil
}

func (self CorbaRepository_Helper) Write(stream __goidl__.IWriteAny, v CorbaRepository) error {
	return nil
}


//noinspection GoUnusedGlobalVariable
var CorbaRepositoryHelper = CorbaRepository_Helper{}

func init() {
}
