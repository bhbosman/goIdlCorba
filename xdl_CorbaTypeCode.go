// Code generated by me. DO NOT EDIT.

package goIdlCorba

import __goidl__ "github.com/bhbosman/goidl"

// Interface declaration: "CORBA::TypeCode", generatedBy by: "WriteInterface"
type CorbaTypeCode interface {
	//Exceptions for : ConcreteBaseType
	//	CorbaTypeCodeBadKind
	// Original name: "concrete_base_type"
	ConcreteBaseType(params CorbaTypeCodeConcreteBaseTypeIn) (CorbaTypeCodeConcreteBaseTypeOut, error)
	//Exceptions for : ContentType
	//	CorbaTypeCodeBadKind
	// Original name: "content_type"
	ContentType(params CorbaTypeCodeContentTypeIn) (CorbaTypeCodeContentTypeOut, error)
	//Exceptions for : DefaultIndex
	//	CorbaTypeCodeBadKind
	// Original name: "default_index"
	DefaultIndex(params CorbaTypeCodeDefaultIndexIn) (CorbaTypeCodeDefaultIndexOut, error)
	//Exceptions for : DiscriminatorType
	//	CorbaTypeCodeBadKind
	// Original name: "discriminator_type"
	DiscriminatorType(params CorbaTypeCodeDiscriminatorTypeIn) (CorbaTypeCodeDiscriminatorTypeOut, error)
	// Original name: "equal"
	Equal(params CorbaTypeCodeEqualIn) (CorbaTypeCodeEqualOut, error)
	// Original name: "equivalent"
	Equivalent(params CorbaTypeCodeEquivalentIn) (CorbaTypeCodeEquivalentOut, error)
	//Exceptions for : FixedDigits
	//	CorbaTypeCodeBadKind
	// Original name: "fixed_digits"
	FixedDigits(params CorbaTypeCodeFixedDigitsIn) (CorbaTypeCodeFixedDigitsOut, error)
	//Exceptions for : FixedScale
	//	CorbaTypeCodeBadKind
	// Original name: "fixed_scale"
	FixedScale(params CorbaTypeCodeFixedScaleIn) (CorbaTypeCodeFixedScaleOut, error)
	// Original name: "get_compact_typecode"
	GetCompactTypecode(params CorbaTypeCodeGetCompactTypecodeIn) (CorbaTypeCodeGetCompactTypecodeOut, error)
	//Exceptions for : Id
	//	CorbaTypeCodeBadKind
	// Original name: "id"
	Id(params CorbaTypeCodeIdIn) (CorbaTypeCodeIdOut, error)
	// Original name: "kind"
	Kind(params CorbaTypeCodeKindIn) (CorbaTypeCodeKindOut, error)
	//Exceptions for : Length
	//	CorbaTypeCodeBadKind
	// Original name: "length"
	Length(params CorbaTypeCodeLengthIn) (CorbaTypeCodeLengthOut, error)
	//Exceptions for : MemberCount
	//	CorbaTypeCodeBadKind
	// Original name: "member_count"
	MemberCount(params CorbaTypeCodeMemberCountIn) (CorbaTypeCodeMemberCountOut, error)
	//Exceptions for : MemberLabel
	//	CorbaTypeCodeBadKind
	//	CorbaTypeCodeBounds
	// Original name: "member_label"
	MemberLabel(params CorbaTypeCodeMemberLabelIn) (CorbaTypeCodeMemberLabelOut, error)
	//Exceptions for : MemberName
	//	CorbaTypeCodeBadKind
	//	CorbaTypeCodeBounds
	// Original name: "member_name"
	MemberName(params CorbaTypeCodeMemberNameIn) (CorbaTypeCodeMemberNameOut, error)
	//Exceptions for : MemberType
	//	CorbaTypeCodeBadKind
	//	CorbaTypeCodeBounds
	// Original name: "member_type"
	MemberType(params CorbaTypeCodeMemberTypeIn) (CorbaTypeCodeMemberTypeOut, error)
	//Exceptions for : MemberVisibility
	//	CorbaTypeCodeBadKind
	//	CorbaTypeCodeBounds
	// Original name: "member_visibility"
	MemberVisibility(params CorbaTypeCodeMemberVisibilityIn) (CorbaTypeCodeMemberVisibilityOut, error)
	//Exceptions for : Name
	//	CorbaTypeCodeBadKind
	// Original name: "name"
	Name(params CorbaTypeCodeNameIn) (CorbaTypeCodeNameOut, error)
	//Exceptions for : TypeModifier
	//	CorbaTypeCodeBadKind
	// Original name: "type_modifier"
	TypeModifier(params CorbaTypeCodeTypeModifierIn) (CorbaTypeCodeTypeModifierOut, error)
}

const CorbaTypeCodeConcreteBaseTypeOperation = "concrete_base_type"
const CorbaTypeCodeContentTypeOperation = "content_type"
const CorbaTypeCodeDefaultIndexOperation = "default_index"
const CorbaTypeCodeDiscriminatorTypeOperation = "discriminator_type"
const CorbaTypeCodeEqualOperation = "equal"
const CorbaTypeCodeEquivalentOperation = "equivalent"
const CorbaTypeCodeFixedDigitsOperation = "fixed_digits"
const CorbaTypeCodeFixedScaleOperation = "fixed_scale"
const CorbaTypeCodeGetCompactTypecodeOperation = "get_compact_typecode"
const CorbaTypeCodeIdOperation = "id"
const CorbaTypeCodeKindOperation = "kind"
const CorbaTypeCodeLengthOperation = "length"
const CorbaTypeCodeMemberCountOperation = "member_count"
const CorbaTypeCodeMemberLabelOperation = "member_label"
const CorbaTypeCodeMemberNameOperation = "member_name"
const CorbaTypeCodeMemberTypeOperation = "member_type"
const CorbaTypeCodeMemberVisibilityOperation = "member_visibility"
const CorbaTypeCodeNameOperation = "name"
const CorbaTypeCodeTypeModifierOperation = "type_modifier"
//noinspection GoSnakeCaseUsage
type CorbaTypeCode_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CorbaTypeCodeId_Const = "IDL:omg.org/CORBA/TypeCode:1.0"

func (self CorbaTypeCode_Helper) Id() string {
	return CorbaTypeCodeId_Const
}

func (self CorbaTypeCode_Helper) Read(stream __goidl__.IReadAny) (CorbaTypeCode, error) {
	return nil, nil
}

func (self CorbaTypeCode_Helper) Write(stream __goidl__.IWriteAny, v CorbaTypeCode) error {
	return nil
}


//noinspection GoUnusedGlobalVariable
var CorbaTypeCodeHelper = CorbaTypeCode_Helper{}

func init() {
}
